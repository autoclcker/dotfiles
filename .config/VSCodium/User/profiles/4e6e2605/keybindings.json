// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+left",
        "command": "workbench.action.decreaseViewSize"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.increaseViewSize"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": " || inDebugMode || terminal.active && terminalFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+down",
        "command": "workbench.action.terminal.resizePaneDown"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.terminal.resizePaneUp"
    },
    {
        "key": "alt+f4",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.previousSideBarView"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.nextSideBarView"
    },
{
    "key": "alt+left",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
    "key": "ctrl+shift+left",
    "command": "-workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
    "key": "alt+right",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
    "key": "ctrl+shift+right",
    "command": "-workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
},
{
    "key": "alt+q",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
},
{
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
},
{
    "key": "alt+home",
    "command": "workbench.action.closeSidebar"
},
{
    "key": "alt+v",
    "command": "workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
},
{
    "key": "ctrl+shift+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
},
{
    "key": "alt+p",
    "command": "-toggleSearchPreserveCase",
    "when": "searchViewletFocus"
},
{
    "key": "alt+p",
    "command": "workbench.action.showCommands"
},
{
    "key": "alt+p",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
},
{
    "key": "alt+x",
    "command": "workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
},
{
    "key": "alt+f",
    "command": "workbench.action.findInFiles"
},
{
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
},
{
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
},
{
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeActiveEditor"
},
{
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
},
{
    "key": "alt+v",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
},
{
    "key": "ctrl+shift+5",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
},
{
    "key": "ctrl+shift+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus &&  terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
},
{
        "key": "alt+c",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "inDebugMode || terminal.active && terminalFocus"
},
{
    "key": "alt+g",
    "command": "workbench.action.toggleAuxiliaryBar"
},
{
    "key": "alt+d",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
},
{
    "key": "ctrl+shift+,",
    "command": "workbench.action.moveEditorLeftInGroup"
},
{
    "key": "ctrl+shift+.",
    "command": "workbench.action.moveEditorRightInGroup"
},
{
    "key": "alt+i",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
},
{
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
},
{
    "key": "alt+i",
    "command": "workbench.action.debug.stepIntoTarget",
    "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
},
{
    "key": "ctrl+f11",
    "command": "-workbench.action.debug.stepIntoTarget",
    "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
},
{
    "key": "alt+o",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
},
{
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
},
{
    "key": "alt+n",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
},
{
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
},
{
    "key": "alt+r",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
},
{
    "key": "ctrl+shift+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
},
{
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
},
{
    "key": "alt+d",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
},
{
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
},
{
    "key": "alt+b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && editorTextFocus"
},
{
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && editorTextFocus"
},
{
    "key": "alt+a",
    "command": "workbench.view.extension.test"
},
{
    "key": "ctrl+l",
    "command": "workbench.debug.panel.action.clearReplAction",
    "when": "workbench.panel.repl.view.active && inDebugMode"
},
{
    "key": "ctrl+q",
    "command": "-extension.vim_winCtrlQ",
    "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
},
{
    "key": "ctrl+s",
    "command": "workbench.action.terminal.new",
    "when": "(terminalFocus && terminalProcessSupported) || (terminalFocus && terminalWebExtensionContributedProfile)"
},
{
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
},
{
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
},
{
    "key": "ctrl+pagedown",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
},
{
    "key": "ctrl+shift+k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
},
{
    "key": "ctrl+pageup",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
},
{
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
},
{
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar"
},
{
"key": "alt+s",
"when": "!sideBarFocus ",
"command": "workbench.action.focusSideBar"
},
{ // Move focus to the Editor, if currently in the SideBar
"key": "alt+s",
"when": "sideBarFocus",
"command": "workbench.action.focusActiveEditorGroup"
},
{
    "key": "ctrl+shift+h",
    "command": "workbench.action.moveEditorToLeftGroup",
    "when": "editorFocus"
},
{
    "key": "ctrl+shift+k",
    "command": "workbench.action.moveEditorToAboveGroup",
    "when": "editorFocus"
},
{
    "key": "ctrl+shift+l",
    "command": "workbench.action.moveEditorToRightGroup",
    "when": "editorFocus"
},
{
    "key": "ctrl+shift+j",
    "command": "workbench.action.moveEditorToBelowGroup",
    "when": "editorFocus"
},
{
    "key": "alt+o",
    "command": "workbench.action.quickOpen",
    "when": "!inDebugMode"
},
{
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
},
{
    "key": "alt+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "alt+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
},
{
    "key": "alt+j",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
},
{
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
},
{
    "key": "alt+k",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
},
{
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorFocus"
}
]
