plugins:
  debug-pod:
    shortCut: c
    override: true
    confirm: true
    background: false
    description: Debug
    scopes:
      - pod
    command: sh
    args:
      - -c
      - >-
        kubectl --namespace $NAMESPACE --context $CONTEXT debug $NAME --stdin --tty --image nicolaka/netshoot
  apply-manifest:
    shortCut: Shift-E
    override: false
    confirm: false
    background: false
    description: Apply from editor
    scopes:
      - all
    command: sh
    args:
      - -c
      - >-
        nvim /tmp/k9s.yaml &&
        (test -s $_ && cat /tmp/k9s.yaml | kubectl --namespace $NAMESPACE --context $CONTEXT apply --filename -) &&
        rm /tmp/k9s.yaml || exit 0
  clear-namespace:
    shortCut: Ctrl-L
    override: false
    overwriteOutput: false
    confirm: true
    dangerous: false
    background: true
    description: Clear namespace
    scopes:
      - configmaps
      - deployments
      - ingresses
      - pods
      - secrets
    command: sh
    args:
      - -c
      - >-
        kubectl --namespace $NAMESPACE --context $CONTEXT
        delete all,configmaps,secrets,ingresses --all
  scale-reset:
    shortCut: Shift-X
    override: false
    overwriteOutput: false
    confirm: true
    dangerous: false
    background: true
    description: Scale all pods to 0
    scopes:
      - deployments
      - replicasets
      - statefulsets
    command: sh
    args:
      - -c
      - >-
        kubectl --namespace $NAMESPACE --context $CONTEXT
        scale statefulset,deployment --all --replicas=0
  scale-up:
    shortCut: Shift-S
    override: false
    overwriteOutput: false
    confirm: true
    dangerous: false
    description: Scale all pods to 1
    scopes:
      - replicasets
      - deployments
      - statefulsets
    command: sh
    background: true
    args:
      - -c
      - >-
        kubectl --namespace $NAMESPACE --context $CONTEXT
        scale statefulset,deployment --all --replicas=1
  increase-replicas:
    shortCut: a
    override: false
    overwriteOutput: true
    confirm: false
    dangerous: false
    description: Increase replicas count by 1
    scopes:
      - deployments
      - statefulsets
    command: sh
    background: true
    args:
      - -c
      - >-
        count=$(test "$COL-UP-TO-DATE" = true && printf 1 || printf $COL-UP-TO-DATE) &&
        kubectl --namespace $NAMESPACE --context $CONTEXT
        scale $RESOURCE_NAME $NAME --replicas=$(($count+1))
  decrease-replicas:
    shortCut: x
    override: false
    overwriteOutput: true
    confirm: false
    dangerous: false
    description: Decrease replicas count by 1
    scopes:
      - deployments
      - statefulsets
    command: sh
    background: true
    args:
      - -c
      - >-
        count=$(test "$COL-UP-TO-DATE" = true && printf 1 || printf $COL-UP-TO-DATE) &&
        kubectl --namespace $NAMESPACE --context $CONTEXT
        scale $RESOURCE_NAME $NAME --replicas=$(($count-1))
  copy-ingress-hosts:
    shortCut: c
    override: true
    overwriteOutput: true
    confirm: false
    dangerous: false
    description: Copy ingress hosts
    scopes:
      - ingresses
    command: sh
    background: true
    args:
      - -c
      - >-
        kubectl --namespace $NAMESPACE --context $CONTEXT
        get ingress $NAME --output go-template='{{range .spec.rules}}{{.host}} {{end}}' |
        xsel --clipboard --input && printf "Successfully copied hosts"
  copy-screendump-path:
    shortCut: c
    override: true
    overwriteOutput: true
    confirm: false
    dangerous: false
    description: Copy screendump path
    scopes:
      - screendumps
    command: sh
    background: true
    args:
      - -c
      - >-
        printf $COL-DIR/$COL-NAME |
        xsel --clipboard --input && printf "Successfully copied path"
  kill-resource:
    shortCut: Shift-D
    override: false
    overwriteOutput: true
    confirm: false
    dangerous: false
    description: Destroy resource
    scopes:
      - configmaps
      - deployments
      - ingresses
      - jobs
      - persistentvolumeclaims
      - pods
      - roles
      - rolebindings
      - screendumps
      - secrets
      - services
      - statefulsets
    command: sh
    background: true
    args:
      - -c
      - >-
        kubectl --namespace $NAMESPACE --context $CONTEXT
        delete --now $RESOURCE_NAME $NAME
  logs:
    shortCut: Shift-L
    confirm: false
    description: View logs
    scopes:
      - pods
    command: sh
    background: false
    args:
      - -ic
      - |
        kubectl logs $NAME --namespace $NAMESPACE --context $CONTEXT --tail=10000 | less
  previous-logs:
    shortCut: Shift-P
    confirm: false
    description: View previous logs
    scopes:
      - pods
    command: sh
    background: false
    args:
      - -ic
      - |
        kubectl logs $NAME --namespace $NAMESPACE --context $CONTEXT --previous | less
  dive:
    shortCut: d
    confirm: false
    description: Dive image
    scopes:
      - containers
    command: dive
    background: false
    args:
      - $COL-IMAGE
  helm-diff-previous:
    shortCut: Shift-J
    confirm: false
    description: Diff with Previous Revision
    scopes:
      - helm
    command: sh
    background: false
    args:
      - -c
      - >-
        LAST_REVISION=$(($COL-REVISION-1));
        helm diff revision $COL-NAME $COL-REVISION $LAST_REVISION --kube-context $CONTEXT --namespace $NAMESPACE --color | less
  helm-diff-current:
    shortCut: Shift-J
    confirm: false
    description: Diff with Current Revision
    scopes:
      - history
    command: sh
    background: false
    args:
      - -c
      - >-
        RELEASE_NAME=$(printf $NAME | cut -d':' -f1);
        LATEST_REVISION=$(helm history --namespace $NAMESPACE --kube-context $CONTEXT $RELEASE_NAME | grep deployed | cut -d$'\t' -f1 | tr -d ' \t');
        helm diff revision $RELEASE_NAME $LATEST_REVISION $COL-REVISION --kube-context $CONTEXT --namespace $NAMESPACE --color | less
  helm-uninstall:
    shortCut: Shift-D
    confirm: false
    description: Uninstall Helm Release
    scopes:
      - helm
    command: sh
    background: true
    args:
      - -c
      - >-
        helm uninstall $NAME --kube-context $CONTEXT --namespace $NAMESPACE && printf "Successful chart uninstall"
